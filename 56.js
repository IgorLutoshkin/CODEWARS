function calculateYears(principal, interest, tax, desired) {
  let count = 0;

  if (principal >= desired) {
    return count;
  }

  while (principal <= desired) {
    let interestAge = principal * interest;

    let taxAge = interestAge * tax;

    let sumAge = interestAge - taxAge;

    principal = principal + sumAge;

    count++;
  }

  return count;
}

console.log(calculateYears(1000, 0.05, 0.18, 1000));

/*
У мистера Скруджа есть сумма денег «P», которую он хочет инвестировать. Прежде чем сделать это, он хочет узнать, сколько лет «Y» эта сумма «P» должна находиться в банке, чтобы она превратилась в желаемую сумму «D».

Сумма хранится в течение «Y» лет в банке, где ежегодно выплачиваются проценты «I». После уплаты налогов «T» за год новая сумма реинвестируется.

Примечание для налоговых органов: налогом облагается не инвестированная сумма, а только начисленные за год проценты

Пример:

  Let P be the Principal = 1000.00      
  Let I be the Interest Rate = 0.05      
  Let T be the Tax Rate = 0.18      
  Let D be the Desired Sum = 1100.00


After 1st Year -->
  P = 1041.00
After 2nd Year -->
  P = 1083.86
After 3rd Year -->
  P = 1128.30
Таким образом, мистеру Скруджу придётся ждать 3 года, пока первоначальный взнос не достигнет желаемой суммы.

Ваша задача — завершить предложенный метод и вернуть количество лет «Y» в целом, чтобы мистер Скрудж получил желаемую сумму.

Допущение: предположим, что желаемая сумма «D» всегда больше первоначальной суммы «P». Однако лучше всего учитывать, что если желаемая сумма «D» равна сумме «P», то должно быть возвращено 0 лет.
*/
