/*Вы получаете массив чисел, возвращаете сумму всех положительных значений.
Пример [1,-4,7,12] => 1 + 7 + 12 = 20
Примечание: если нечего суммировать, сумма по умолчанию равна 0.
*/

function positiveSum(arr) {
  return arr.reduce((acc, curr) => (curr > 0 ? acc + curr : acc), 0);
}

console.log(positiveSum([1, 2, -3, 4, 5])); // Output: 12

/* Для заданных входных данных [1, 2, -3, 4, 5] вот как происходит вычисление:

Итерация 1: acc = 0, curr = 1. Поскольку curr больше 0, acc становится 0 + 1 = 1.
Итерация 2: acc = 1, curr = 2. Поскольку curr больше 0, acc становится 1 + 2 = 3.
Итерация 3: acc = 3, curr = -3. Поскольку curr значение не больше 0, acc остается неизменным на 3.
Итерация 4: acc = 3, curr = 4. Поскольку curr больше 0, acc становится 3 + 4 = 7.
Итерация 5: acc = 7, curr = 5. Поскольку curr больше 0, acc становится 7 + 5 = 12.
Конечное значение накопителя (acc) равно 12, и это результат positiveSum([1, 2, -3, 4, 5]). */
